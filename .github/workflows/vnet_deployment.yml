name: Azure Deployment

on:
  workflow_call:
    inputs:
      environment:
        description: 'Deployment environment (dev or prod)'
        required: true
        type: string
      resource_group_name:
        description: 'Azure Resource Group Name'
        required: true
        type: string
      location:
        description: 'Azure Region'
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Debug Secrets
        run: |
          echo "Client ID length: ${#AZURE_CLIENT_ID}"
          echo "Client Secret length: ${#AZURE_CLIENT_SECRET}"
          echo "Tenant ID length: ${#AZURE_TENANT_ID}"
          echo "Subscription ID length: ${#AZURE_SUBSCRIPTION_ID}"
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Azure CLI
        uses: azure/cli@v1.0.9
        with:
          inlineScript: |
            az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set Azure CLI Config Directory
        run: |
          mkdir -p $GITHUB_WORKSPACE/.azure
          export AZURE_CONFIG_DIR=$GITHUB_WORKSPACE/.azure

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.11.2'

      - name: Terraform Init
        working-directory: ${{ github.workspace }}/environment/${{ inputs.environment }}
        run: terraform init

      - name: Terraform Validate
        working-directory: ${{ github.workspace }}/environment/${{ inputs.environment }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ github.workspace }}/environment/${{ inputs.environment }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ github.workspace }}/environment/${{ inputs.environment }}
        run: terraform apply -auto-approve tfplan
